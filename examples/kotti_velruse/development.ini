###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543



[app:kotti_velruse]
use = egg:kotti_velruse

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

#pyramid.includes = 
#    pyramid_debugtoolbar

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.

# you should change this
session.secret=CHANGE-ME





### --------------------------------------------------------------------------
# [dummy] Kotti configuration
# These settings are necessary when testing plugins in isolation.
###

[filter:fanstatic]
use = egg:fanstatic#fanstatic

[pipeline:main]
pipeline = fanstatic
           kotti

[app:kotti]
use = egg:kotti

pyramid.reload_templates = true
pyramid.debug_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

pyramid.includes = pyramid_debugtoolbar
                   pyramid_tm

sqlalchemy.url = sqlite:///%(here)s/Kotti.db
#mail.default_sender = yourname@yourhost

kotti.site_title = My Kotti site
kotti.secret = qwerty

kotti.configurators = kotti_tinymce.kotti_configure

kotti.includes = kotti_velruse

### --------------------------------------------------------------------------




### --------------------------------------------------------------------------
# velruse configuration
#
# Module velruse.app.includeme looks for entries named "provider." in order
# to discover which providers are configured. 
#
# NOTE: these configurations must be inside [app:kotti]
#
# Icons copied from:
#    https://github.com/diversen/openid-selector
###

realm=http://apps.xkbm.net

endpoint = %(realm)s:6543/logged_in
store = memory
# store = redis
# store.host = localhost
# store.port = 6379
# store.db = 0
# store.key_prefix = velruse_ustore

# OpenID
#   Despite a single provide.openid is declared, you can specify multiple
#   URLs that should be used for connecting to multiple OpenID endpoints.
#   See: login.mako for an example of how this can be done
provider.openid.realm=%(realm)s
provider.openid.store=openid.store.memstore:MemoryStore

# Google (this an alias to Google Hybrid, for backward compatibility)
#provider.google.realm=%(realm)s
#provider.google.consumer_key=CHANGE-ME
#provider.google.consumer_secret=CHANGE-ME
#provider.google.scope=CHANGE-ME

# Google Hybrid
#provider.google_hybrid.realm=%(realm)s
#provider.google_hybrid.consumer_key=CHANGE-ME
#provider.google_hybrid.consumer_secret=CHANGE-ME
#provider.google_hybrid.scope=CHANGE-ME

# Google OAuth2
provider.google_oauth2.consumer_key=CHANGE-ME
provider.google_oauth2.consumer_secret=CHANGE-ME
provider.google_oauth2.scope=CHANGE-ME

# Yahoo
#provider.yahoo.realm=%(realm)s
#provider.yahoo.consumer_key=CHANGE-ME
#provider.yahoo.consumer_secret=CHANGE-ME

# Live
provider.live.client_id=CHANGE-ME
provider.live.client_secret=CHANGE-ME
provider.live.consumer_key=CHANGE-ME
provider.live.consumer_secret=CHANGE-ME

# Twitter
provider.twitter.consumer_key=CHANGE-ME
provider.twitter.consumer_secret=CHANGE-ME

# Facebook
provider.facebook.app_id=CHANGE-ME
provider.facebook.app_secret=CHANGE-ME
provider.facebook.consumer_key=CHANGE-ME
provider.facebook.consumer_secret=CHANGE-ME

# LinkedIn
provider.linkedin.consumer_key=CHANGE-ME
provider.linkedin.consumer_secret=CHANGE-ME

# Github
provider.github.app_id=CHANGE-ME
provider.github.app_secret=CHANGE-ME
provider.github.consumer_key=CHANGE-ME
provider.github.consumer_secret=CHANGE-ME

# BitBucket
provider.bitbucket.consumer_key=CHANGE-ME
provider.bitbucket.consumer_secret=CHANGE-ME

### --------------------------------------------------------------------------




### --------------------------------------------------------------------------
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, kotti, velruse, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_kotti]
level = DEBUG
handlers =
qualname = kotti

[logger_velruse]
level = DEBUG
handlers =
qualname = kotti_velruse

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither. (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

### --------------------------------------------------------------------------
